import tkinter as tk
from tkinter import *
from random import randint


inputList = ''
numberOfGuess = 0
state = "empty"
window = tk.Tk()
window.title("CATCH LEVOSKI")


# Secret code (Random numbers)
def code ():
     global arrayOfArrangement
     secretArrangement = ''

     while len(secretArrangement) != 4 :
    # While the number of arrayOfArrangement is NOT 4

         randomNumber = str(randint(1, 6)); # There are 6 numbers
         secretArrangement = secretArrangement + randomNumber;

     arrayOfArrangement = list(secretArrangement);

     return arrayOfArrangement



lblInst = tk.Label(window, text = "MASTERMIND", fg = "red"). grid(row=0, column=0)
lblLine0 = tk.Label(window, text = "************we'll design empty space if we can************").grid(row=1, column=0)
lblSecArrangement = tk.Label(window, text="We'll show the secret arrangement here").grid(row=10, column=0)
lblEmptyLine = tk.Label(window, text = "").grid(row=15, column=0, columnspan=5)


buttons = []
for number in range(0, 7):
    button = tk.Button(window, text=number, command=lambda number=number: userInput(number), state = tk.DISABLED)
    buttons.append(button)

btnStartGame = tk.Button(window, text="Start Game", command=lambda : start())
btnEraseGame = tk.Button(window, text="Erase", command=lambda : erase())
##btnCheck = tk.Button(window, text="Check", command=lambda : position(array), state = tk.DISABLED)
btnCheck = tk.Button(window, text="Check", command=lambda : check(), state = tk.DISABLED)


for col in range(1, 7):
          buttons[col].grid(row= 11, column=col)

btnStartGame.grid(row=14, column=0)
btnEraseGame.grid(row=14, column=1)
btnCheck.grid(row=14, column=2)








def start():
    global state


    btnEraseGame["state"] = NORMAL
    for button in buttons :
        button["state"] = NORMAL
     
        if state =="empty":
            state = "started"
            btnStartGame["text"] = "Restart"
            array = code()
            blank()



def userInput(number):
     global buttons, inputList, arrayOfInput

     IM = str(number) #List did not work here so I removed the brackets
     inputList = inputList + IM
     arrayOfInput = list(inputList)
     limit() #don't pass it


def limit(): #no parameter
     global state, arrayOfInput #add to globals in both defs
     

     if len(arrayOfInput)==4:
          print(arrayOfInput)
          print("You've reached the last number you can enter")
          btnCheck["state"] = NORMAL
          for button in buttons :
               button["state"] = DISABLED
               state ="empty"
               
     else:
          print("You've entered : ",len(arrayOfInput), "th number")


arrayOfInput= [] #declare here but empty


def blank():
     global inputList, numberOfGuess

     inputList = ''
     numberOfGuess = 0
     lblNGuess = tk.Label(window, text = "Number of Guesses:  " + str(numberOfGuess)).grid(row=4, column=0)



def erase():
    global inputList

    inputList = ''
    for button in buttons :
         button["state"] = NORMAL

        

def check():
     global numberOfGuess, arrayOfArrangement
     numberOfGuess += 1
     lblNGuess = tk.Label(window, text = "Number of Guesses:  " + str(numberOfGuess)).grid(row=4, column=0)
     if numberOfGuess == 12:
          for button in buttons:
               button["state"] = DISABLED

          btnCheck["state"] = DISABLED
          btnEraseGame["state"] = DISABLED

          print ("The secret arragement was : ", arrayOfArrangement)
               
          
     position()

     
# Digits that are the correct number AND in the correct position ****First
def position ():
     global lol
     
     lol = arrayOfArrangement[:]
     rightPosition = 0

     for x in range (0,4):
          if arrayOfInput[x] == lol[x]:
               lol[x] = ''
               arrayOfInput[x] = 'empty'
               rightPosition += 1
               
     wrongPosition(rightPosition)
         


# Digits that are the correct number NOT in the correct position
def wrongPosition (rightPosition):
     rightNum = 0

     count = 4;

     y = 0;

     while count != 0:

          for item in range (0, 4):

               if arrayOfInput[y] == lol[item]:
                    arrayOfInput[y] = 'empty'
                    lol[item] = ''
                    rightNum += 1;
                    
                   
          y += 1

          count -= 1

         
     btnCheck["state"] = DISABLED
     for button in buttons :
          button["state"] = DISABLED


     indicator(rightPosition, rightNum)
          


def indicator (bothRight, oneRight):
      q = 10
    
     #Code for the indicators
     #Position + number is correct

      for star in range (0, bothRight):
           bothIndic = Label (window, text = "*", fg = "red")
           bothIndic['font'] = ("Helvetica", 20);
           bothIndic.place (x = q, y = 25,);
           q += 25
      
     
           # Number is correct
      for star in range (0, oneRight):
           oneIndic = Label (window, text = "*", fg = "grey")
           oneIndic['font'] = ("Helvetica", 20);
           oneIndic.place (x = q, y = 25);
           q += 25

      # Not correct
      noneRight = 4 - bothRight - oneRight

      for star in range (0, noneRight):
           noneIndic = Label (window, text = "*", fg = "black")
           noneIndic['font'] = ("Helvetica", 20);
           noneIndic.place (x = q + star, y = 25);
           q += 25


